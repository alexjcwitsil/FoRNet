##################################################
## ---- Join Label and Background Features ---- ##
###                                            ###
## Read in backgound and label features for each##
## image and join them into a singel feature    ##
## list structure.                              ##
##################################################

#Dependencies
import numpy as np
import pandas as pd

def join_seg_bkg_features(seg_info, bkg_info)

###################
## FIND THE DATA ##
###################

## recall bkg features depend on Gaussian sigma while labeled features do not.
bkg_feature_dir = './results/training_results/background_features/sig' + str(gaus_sig)
label_feature_dir = './results/training_results/labeled_features/'

## list all the files in the training data
labeled_files = list(filter(lambda x: 'pickle' in x, os.listdir(label_feature_dir)))
bkg_files = list(filter(lambda x: 'pickle' in x, os.listdir(bkg_feature_dir)))

###########################
## READ IN LABELED FILES ##
###########################

i=0
while i<len(labeled_files) :
    ## what is the current file and labeled file
    cur_labeled_file = labeled_files[i]
    
    # what is the file location
    labeled_file_loc = label_feature_dir + cur_labeled_file
        
    ## load the current file's data
    if i==0:
        with open(labeled_file_loc, 'r+b') as handle:
            labeled_training_info = pickle.load(handle)
            labeled_features = labeled_training_info[1]
    
    elif i>0:
        with open(labeled_file_loc, 'r+b') as handle:
            labeled_training_info = pickle.load(handle)
            labeled_features=labeled_features.append(labeled_training_info[1])

    i=i+1


##############################
## READ IN BACKGROUND FILES ##
##############################

i=0
while i<len(bkg_files) :
    ## what is the current file and labeled file
    cur_bkg_file = bkg_files[i]
    
    # what is the file location
    bkg_file_loc = bkg_feature_dir + cur_bkg_file
    
    ## load the current file's data
    if i==0:
        with open(bkg_file_loc, 'r+b') as handle:
            bkg_training_info = pickle.load(handle)
            bkg_features = bkg_training_info[1]
            
    elif i>0:
        with open(bkg_file_loc, 'r+b') as handle:
            bkg_training_info = pickle.load(handle)
            bkg_features = bkg_features.append(bkg_training_info[1])
            
    i=i+1


## append labeled and background features into a dataframe of training features
training_features = labeled_features.append(bkg_features)


############
## SAVING ##
############

feature_save_path = './results/training_results/'
feature_save_file = 'sig' + str(gaus_sig) + 'training_features.pickle'
training_features.to_pickle(feature_save_loc)






